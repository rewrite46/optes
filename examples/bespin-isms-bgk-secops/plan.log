Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.main.prismacloud_compliance_standard.compliance will be created
  + resource "prismacloud_compliance_standard" "compliance" {
      + cloud_types             = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + description             = "BespinGlobal Cloud Security (ISMS)"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "BespinGlobal Cloud Security"
      + policies_assigned_count = (known after apply)
      + system_default          = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a1 will be created
  + resource "prismacloud_compliance_standard_requirement" "a1" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "IAM(Identity and Access Management)는 AWS 리소스에 대한 액세스를 안전하게 제어할 수 있는 웹 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "IAM"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a10 will be created
  + resource "prismacloud_compliance_standard_requirement" "a10" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "Inspector는 Amazon EC2 instances의 네트워크 액세스 가능성 및 해당 인스턴스에서 실행되는 애플리케이션의 보안 상태를 테스트하며 노출, 취약성 및 모범 사례에서 벗어난 애플리케이션을 평가하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "Insepector"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "10"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a11 will be created
  + resource "prismacloud_compliance_standard_requirement" "a11" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "CloudTrail은 계정의 거버넌스, 규정 준수, 운영 및 위험 감사를 활성화하도록 도와주는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "CloudTrail"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "11"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a12 will be created
  + resource "prismacloud_compliance_standard_requirement" "a12" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "CloudWatch는 AWS 리소스와  실시간으로 실행 중인 애플리케이션을 모니터링하여 측정할 수 있는 변수인 지표를 수집하고 추적하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "CloudWatch"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "12"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a13 will be created
  + resource "prismacloud_compliance_standard_requirement" "a13" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "ACM(AWS Certificate Manager)은 AWS 기반 웹 사이트 및 애플리케이션에 대한 공인 SSL/TLS 인증서를 생성 및 관리하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "ACM"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "13"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a14 will be created
  + resource "prismacloud_compliance_standard_requirement" "a14" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "API GW(Application Programming Interface Gateway)는 규모와 관계 없이 REST 및 WebSocket API를 생성, 게시, 유지, 모니터링 및 보호하기 위한 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "API GW"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "14"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a15 will be created
  + resource "prismacloud_compliance_standard_requirement" "a15" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "CloudFront는 .html, .css, .js 및 이미지 파일과 같은 정적 및 동적 웹 콘텐츠를 사용자에게 더 빨리 배포하도록 지원하는 웹 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "CloudFront"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "15"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a16 will be created
  + resource "prismacloud_compliance_standard_requirement" "a16" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "Cognito는 웹 및 모바일 앱에 대한 인증, 권한 부여 및 사용자 관리를 제공하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "Cognito"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "16"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a17 will be created
  + resource "prismacloud_compliance_standard_requirement" "a17" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "DocumentDB는 클라우드에서 MongoDB와 호환되는 데이터베이스를 쉽게 설정, 보호 및 조정하는 관리형 데이터베이스 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "DocumentDB"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "17"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a18 will be created
  + resource "prismacloud_compliance_standard_requirement" "a18" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "DMS(Database Migration Service)는 관계형 데이터베이스, 데이터 웨어하우스, NoSQL 데이터베이스 및 그 밖의 데이터 스토어 유형을 쉽게 마이그레이션하도록 해주는 클라우드 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "DMS"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "18"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a19 will be created
  + resource "prismacloud_compliance_standard_requirement" "a19" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "ECR(Elastic Container Registry)은 안전하고 확장 가능하고 신뢰할 수 있는 관리형 AWS 도커 레지스트리 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "ECR"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "19"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a2 will be created
  + resource "prismacloud_compliance_standard_requirement" "a2" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "EC2(Elastic Compute Cloud)는 AWS Cloud에서 확장식 컴퓨팅을 제공하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "EC2"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a20 will be created
  + resource "prismacloud_compliance_standard_requirement" "a20" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "ElastiCache는 분산 인 메모리 캐시(In-Memory-Cache)를 손쉽게 생성하고 확장할 수 있는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "ElastiCache"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "20"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a21 will be created
  + resource "prismacloud_compliance_standard_requirement" "a21" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "ES(Elasticsearch Service)는 AWS Cloud에서 Elasticsearch 클러스터를 쉽게 배포, 운영 및 조정할 수 있는 관리형 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "ES"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "21"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a22 will be created
  + resource "prismacloud_compliance_standard_requirement" "a22" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "EFS(Elastic File System)은 AWS Cloud 서비스와 온프레미스 리소스에서 사용할 수 있는 간단하고 확장 가능하며 탄력적인 완전 관리형 탄력적 NFS 파일 시스템을 제공하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "EFS"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "22"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a23 will be created
  + resource "prismacloud_compliance_standard_requirement" "a23" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "KMS(Key Management Service)는 데이터 암호화에 사용하는 암호화 키인 고객 마스터 키(CMK)를 쉽게 생성하고 제어할 수 있게 해주는 관리형 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "KMS"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "23"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a24 will be created
  + resource "prismacloud_compliance_standard_requirement" "a24" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "Lambda는 서버를 프로비저닝하거나 관리하지 않고도 코드를 실행할 수 있게 해주는 컴퓨팅 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "Lambda"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "24"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a25 will be created
  + resource "prismacloud_compliance_standard_requirement" "a25" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "SNS(Simple Notification Service)는 구독 중인 endpoint 또는 클라이언트에 메시지 전달 또는 전송을 조정 및 관리하는 웹 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "SNS"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "25"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a26 will be created
  + resource "prismacloud_compliance_standard_requirement" "a26" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "SageMaker는 데이터 과학자와 개발자들은 기계 학습 모델을 빠르고 쉽게 구축하고 훈련시킬 수 있으며, 그리고 나서 이들 모델을 프로덕션 지원 호스팅 환경에 직접 배포할 수 있는  종합 관리형 기계 학습 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "SageMaker"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "26"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a27 will be created
  + resource "prismacloud_compliance_standard_requirement" "a27" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "Athena는 S3에서 표준 SQL을 사용하여 데이터를 쉽게 바로 분석할 수 있는 대화형 쿼리 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "Athena"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "27"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a28 will be created
  + resource "prismacloud_compliance_standard_requirement" "a28" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "CodeCommit는 클라우드에서 자산(예: 문서, 소스 코드, 바이너리 파일)을 비공개로 저장하여 관리할 수 있도록 Amazon Web Services에서 호스팅되는 버전 관리 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "CodeCommit"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "28"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a29 will be created
  + resource "prismacloud_compliance_standard_requirement" "a29" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "Directory Service는 다른 AWS 서비스에서 Amazon Cloud Directory 및 Microsoft Active Directory(AD)를 사용할 수 있는 방법을 제공하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "Directory Service"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "29"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a3 will be created
  + resource "prismacloud_compliance_standard_requirement" "a3" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "SG(Security Group)는 인스턴스에 대한 inbound 및 outbound 트래픽을 제어하는 가상 방화벽 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "Security Group"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a30 will be created
  + resource "prismacloud_compliance_standard_requirement" "a30" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "EMR(Elastic Map Reduce)은 AWS에서 Apache Hadoop 및 Apache Spark와 같은 빅 데이터 프레임워크 실행을 간소화하는 관리형 클러스터 플랫폼"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "EMR"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "30"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a31 will be created
  + resource "prismacloud_compliance_standard_requirement" "a31" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "Kinesis는 실시간 스트리밍 데이터를 손쉽게 수집, 처리 및 분석할 수 있으므로 적시에 통찰력을 확보하고 새로운 정보에 신속하게 대응할 수 있는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "Kinesis"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "31"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a32 will be created
  + resource "prismacloud_compliance_standard_requirement" "a32" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "MSK(Managed Streaming for Apache Kafka)는 Apache Kafka 클러스터 운영 관련 전문 지식이 없는 개발자 및 DevOps 관리자도 손쉽게 AWS에서 Apache Kafka 애플리케이션을 실행할 수 있도록 지원하여 Apache Kafka 인프라와 운영을 관리하는 새로운 AWS 스트리밍 데이터 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "MSK"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "32"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a33 will be created
  + resource "prismacloud_compliance_standard_requirement" "a33" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "QuickSight는 데이터를 사용하여 시각적 객체를 구축하고, 애드혹 분석을 수행하고, 사업과 관련된 통찰을 얻는 데 사용할 수 있는 비즈니스 분석 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "QuickSight"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "33"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a34 will be created
  + resource "prismacloud_compliance_standard_requirement" "a34" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "SES(Simple Email Service)는 사용자의 이메일 주소와 도메인을 사용하여 이메일을 보내고 받기 위한 경제적이고 손쉬운 방법을 제공하는 이메일 플랫폼"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "SES"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "34"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a35 will be created
  + resource "prismacloud_compliance_standard_requirement" "a35" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "SQS(Simple Queue Service)는 지속성이 우수하고 사용 가능한 보안 호스팅 대기열을 제공하며 이를 통해 분산 소프트웨어 시스템과 구성 요소를 통합 및 분리할 수 있는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "SQS"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "35"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a4 will be created
  + resource "prismacloud_compliance_standard_requirement" "a4" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "ELB(Elastic Load Balancing)는 EC2 인스턴스, 컨테이너 및 IP 주소와 같은 여러 대상에 대해 수신 애플리케이션 또는 네트워크 트래픽을 여러 가용 영역에 배포해주는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "ELB"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a5 will be created
  + resource "prismacloud_compliance_standard_requirement" "a5" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "VPC(Virtual Private Cloud)는 사용자가 정의한 가상 네트워크 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "VPC"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a6 will be created
  + resource "prismacloud_compliance_standard_requirement" "a6" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "S3(Simple Storage Service)는 사용자가 더 쉽게 웹 규모 컴퓨팅 작업을 수행할 수 있도록 설계된 인터넷용 스토리지 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "S3"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a7 will be created
  + resource "prismacloud_compliance_standard_requirement" "a7" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "RDS(Relational Database Service)는 AWS Cloud에서 관계형 데이터베이스를 더 쉽게 설치, 운영 및 확장할 수 있는 웹 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "RDS"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "7"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a8 will be created
  + resource "prismacloud_compliance_standard_requirement" "a8" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "WAF(Web Application Firewall)는 가용성에 영향을 주거나, 보안을 위협하거나, 리소스를 과도하게 사용하는 일반적인 웹 공격으로부터 웹 애플리케이션이나 API를 보호하는 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "WAF"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "8"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement.a9 will be created
  + resource "prismacloud_compliance_standard_requirement" "a9" {
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + cs_id                   = (known after apply)
      + csr_id                  = (known after apply)
      + description             = "GuardDuty는 VPC  Flow Log, CloudTrail Event Log, DNS Log 같은 데이터 원본을 분석하고 처리하는 지속적 보안 모니터링 서비스"
      + id                      = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + name                    = "GuardDuty"
      + policies_assigned_count = (known after apply)
      + requirement_id          = "9"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a10_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a10_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "취약점 점검"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "10.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a11_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a11_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Trails 생성"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "11.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a11_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a11_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "모든 Region에 대한 Trail 생성"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "11.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a11_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a11_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "로그파일 무결성 검증"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "11.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a11_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a11_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "로그의 정기적 검토"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "11.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a11_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a11_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "이상 징후에 대한 모니터링"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "11.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a11_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a11_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "로그 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "11.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a12_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a12_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "변경 알림 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "12.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a12_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a12_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "키 삭제/비활성화 알림"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "12.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a13_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a13_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "인증서 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "13.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a13_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a13_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "와일드카드(*) 도메인 사용 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "13.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a13_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a13_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "인증서 검증 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "13.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a13_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a13_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "인증서 투명성 로깅"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "13.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a13_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a13_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "미사용 인증서 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "13.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a14_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a14_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Request 인증"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "14.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a14_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a14_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "접근 통제"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "14.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a14_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a14_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "영역 분리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "14.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a15_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a15_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "암호화 통신"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "15.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a15_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a15_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Access Logging"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "15.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a15_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a15_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "TLS 버전"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "15.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a15_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a15_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "WAF 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "15.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a15_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a15_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "지리적 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "15.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a15_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a15_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "접근 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "15.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(자격증명 풀) 미인증된 자격 증명에 대한 액세스 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(자격증명 풀) 불필요한 자격 증명 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(사용자 풀) Password 복잡성 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(사용자 풀) MFA 사용 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(사용자 풀) 비밀번호 복구 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(사용자 풀) 사용자 가입 권한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_7 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_7" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(사용자 풀) 노출된 자격 증명 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.7"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a16_8 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a16_8" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(사용자 풀) 사용자 디바이스 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "16.8"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a17_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a17_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "17.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a17_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a17_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "백업 보존 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "17.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a17_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a17_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "감사 로그"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "17.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a17_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a17_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "패치 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "17.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a17_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a17_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "삭제 보호"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "17.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a18_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a18_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "퍼블릭 액세스 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "18.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a18_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a18_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "이중화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "18.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a18_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a18_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "18.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a19_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a19_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "태그 변경 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "19.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a19_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a19_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "이미지 스캔"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "19.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Root 계정 사용 유무"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_10 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_10" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "강화된 인증방식 적용1"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.10"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_11 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_11" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "강화된 인증방식 적용2"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.11"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_12 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_12" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Console 접근 통제"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.12"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_13 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_13" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "그룹 권한 관리1"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.13"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_14 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_14" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "그룹 권한 관리2"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.14"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_15 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_15" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "권한 모니터링"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.15"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_16 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_16" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "역할 전환 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.16"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_17 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_17" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Access Key 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.17"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_18 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_18" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "불필요한 계정 제거"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.18"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Root 계정 Access Key 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Root 계정 MFA 활성화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "IAM 계정 생성 유무"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Password 복잡성 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Password 최소길이 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_7 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_7" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Password 최대 사용기간 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.7"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_8 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_8" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Password 재사용 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.8"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a1_9 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a1_9" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "본인 Password 변경 허용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "1.9"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a20_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a20_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "다중 AZ"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "20.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a20_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a20_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "20.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a20_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a20_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "전송구간 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "20.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a20_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a20_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Redis Auth"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "20.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a20_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a20_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Default VPC 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "20.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a21_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a21_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "VPC Access 제어"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "21.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a21_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a21_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "HTTPS 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "21.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a21_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a21_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "21.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a21_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a21_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "전송구간 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "21.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a21_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a21_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "액세스 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "21.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a21_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a21_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "세분화된 액세스 제어"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "21.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a22_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a22_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "22.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a22_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a22_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "전송구간 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "22.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a22_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a22_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "기본 액세스 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "22.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a22_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a22_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "액세스 지점 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "22.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a23_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a23_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "키 순환"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "23.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a23_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a23_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "미사용 키 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "23.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a23_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a23_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "키 권한 부여"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "23.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a24_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a24_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "환경변수 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "24.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a24_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a24_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "VPC 구성"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "24.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a24_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a24_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "실행 역할"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "24.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a25_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a25_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "액세스 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "25.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a25_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a25_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "25.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a26_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a26_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(레이블링 작업) 교차 원본 리소스 공유(CORS) 구성"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "26.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a26_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a26_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(노트북 인스턴스) 암호화 키 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "26.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a26_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a26_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "(노트북 인스턴스) 외부 통신 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "26.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a27_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a27_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "27.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a28_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a28_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "사용자 인증"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "28.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a29_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a29_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "인증서 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "29.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "불필요한 EC2 인스턴스 제거"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_10 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_10" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "EBS Volume 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.10"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "EC2 서브넷 영역"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "AMI 접근 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "접근 통제"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "EBS Snapshot 접근 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "공인 IP 사용 제한"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_7 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_7" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "불필요한 계정 제거"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.7"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_8 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_8" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "IAM 역할 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.8"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a2_9 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a2_9" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "분리된 EBS Volume 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "2.9"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a30_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a30_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "보안구성 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "30.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a30_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a30_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "퍼블릭 액세스 차단"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "30.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a31_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a31_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Streaming Data 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "31.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a32_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a32_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "전송구간 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "32.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a33_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a33_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "모바일 보안 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "33.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a34_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a34_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "IP 기반 필터링"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "34.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a35_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a35_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "35.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a3_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a3_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "서버간 통신"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "3.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a3_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a3_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "개발환경 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "3.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a3_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a3_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "퍼블릭 서브넷 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "3.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a3_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a3_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Default SG 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "3.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a4_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a4_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "SSL 인증서"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "4.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a4_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a4_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "안전한 암호화 스위트 사용"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "4.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "네트워크 대역 분리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "NACL"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "VPC Peering 연결의 라우팅 테이블 점검"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "불필요한 VPC Peering 제거"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "트래픽 로그 분석"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "NAT Gateway"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_7 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_7" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "불필요한 VPC 제거"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.7"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_8 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_8" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Subnet의 Public IP 자동 할당"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.8"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a5_9 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a5_9" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "VPC 엔드포인트 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "5.9"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "불필요한 버킷 제거"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_10 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_10" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "특정 계정 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.10"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_11 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_11" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "데이터 무결성"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.11"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "버킷 인터넷 공개 설정"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "버저닝 기능 활성화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "객체 수준 로깅"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "S3 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "전송구간 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_7 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_7" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "서버 액세스 로깅"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.7"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_8 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_8" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "MFA Delete 활성화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.8"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a6_9 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a6_9" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "정적 웹 사이트 호스팅"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "6.9"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Cluster/Instance 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "접근통제"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_3 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_3" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Snapshot 암호화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.3"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_4 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_4" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "Snapshot 접근통제"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.4"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_5 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_5" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "이중화"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.5"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_6 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_6" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "백업 관리"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.6"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_7 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_7" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "백업 보존 정책"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.7"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_8 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_8" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "DB접근제어1"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.8"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a7_9 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a7_9" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "DB접근제어2"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "7.9"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a8_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a8_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "웹 공격 대응"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "8.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a8_2 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a8_2" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "룰셋 업데이트"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "8.2"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_compliance_standard_requirement_section.a9_1 will be created
  + resource "prismacloud_compliance_standard_requirement_section" "a9_1" {
      + associated_policy_ids   = (known after apply)
      + created_by              = (known after apply)
      + created_on              = (known after apply)
      + csr_id                  = (known after apply)
      + csrs_id                 = (known after apply)
      + description             = "위협 징후 모니터링"
      + id                      = (known after apply)
      + label                   = (known after apply)
      + last_modified_by        = (known after apply)
      + last_modified_on        = (known after apply)
      + policies_assigned_count = (known after apply)
      + requirement_name        = (known after apply)
      + section_id              = "9.1"
      + standard_name           = (known after apply)
      + system_default          = (known after apply)
      + view_order              = (known after apply)
    }

  # module.main.prismacloud_policy.p1 will be created
  + resource "prismacloud_policy" "p1" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "인증서의 유출에 대비해 와일드카드(*)의 사용을 제한하여 예상 피해범위를 최소화하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ACM-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ACM - 와일드카드(*) 도메인 사용 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ACM"
          + section_description  = "와일드카드(*) 도메인 사용 제한"
          + section_id           = "13.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-acm-describe-certificate' AND json.rule = 'domainValidationOptions[*].domainName contains *'"
          + name       = "ACM - 와일드카드(*) 도메인 사용 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p10 will be created
  + resource "prismacloud_policy" "p10" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "CloudFront를 웹 공격으로부터 보호하기 위해 AWS WAF Web ACL이 적용되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CF-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudFront - WAF 설정"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudFront"
          + section_description  = "WAF 설정"
          + section_id           = "15.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-cloudfront-list-distributions' AND json.rule = 'webACLId is empty'"
          + name       = "CloudFront - WAF 설정"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p100 will be created
  + resource "prismacloud_policy" "p100" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Ethereum Mining Port인 8545, 30303, Bitcoin Mining Port인 8332,8333, Monero Mining Port인 3333, 45700의 트래픽을 식별합니다. 승인 된 응용 프로그램이 사용하는 Port일 수도 있으나 채굴이 진행중인 인스턴스일 수도 있어 확인이 필요합니다."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 트래픽 로그 분석2 (Crypto-Mining Port)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "network"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "트래픽 로그 분석"
          + section_id           = "5.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "network where dest.port IN (8545,30303,8332,8333,3333,45700) and dest.publicnetwork IN ('Internet IPs' , 'Suspicious IPs' ) and bytes > 0 and src.resource IN ( resource where role not in ( 'AWS NAT Gateway', 'AWS ELB'))"
          + name       = "VPC - 트래픽 로그 분석2 (Crypto-Mining Port)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Network"
        }
    }

  # module.main.prismacloud_policy.p101 will be created
  + resource "prismacloud_policy" "p101" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "DB Port로 통신하는 트래픽을 모니터링 합니다. 모니터링되는 DB Port는 Microsoft SQL Server (1433), Oracle (1521), MySQL (3306), Sybase (5000), Postgresql (5432), CouchDB (5984), Redis (6379, 6380), RethinkDB(8080,28015, 29015), CassandraDB (9042), Memcached (11211), MongoDB (27017), DB2 (50000) 입니다."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 트래픽 로그 분석3 (DB Port)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "network"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "트래픽 로그 분석"
          + section_id           = "5.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "network where src.publicnetwork in ('Suspicious IPs','Internet IPs') and dest.port in (1433, 1521, 3306, 5000, 5432, 5984, 6379, 6380, 8080, 9042, 11211, 27017, 28015, 29015, 50000)"
          + name       = "VPC - 트래픽 로그 분석3 (DB Port)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Network"
        }
    }

  # module.main.prismacloud_policy.p102 will be created
  + resource "prismacloud_policy" "p102" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "이 정책은 TCP 프로토콜의 FTP(20,21), SSH(22), Telnet(23), SMTP(25), HTTP(80), POP3(110), NetBios(139), IMAP(143), SMB(445), RDP(3389), VNC(5800,5900) Port로 통신하는 트래픽을 탐지합니다."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 트래픽 로그 분석4 (Well-Known Port)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "network"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "트래픽 로그 분석"
          + section_id           = "5.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "network where src.ip=0.0.0.0 AND protocol='TCP' AND dest.port IN (20,21,22,23,25,80,110,139,143,445,3389,5800,5900) AND source.publicnetwork IN ( 'Internet IPs' , 'Suspicious IPs' ) AND dest.resource IN ( resource where role not in ( 'AWS ELB', 'AWS NAT Gateway' )) AND accepted.bytes > 0"
          + name       = "VPC - 트래픽 로그 분석4 (Well-Known Port)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Network"
        }
    }

  # module.main.prismacloud_policy.p103 will be created
  + resource "prismacloud_policy" "p103" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "프라이빗 서브넷에 존재하는 서버가 외부와의 통신이 필요한 경우 3rd Party 또는 NAT Gateway를 사용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 외부 통신 여부1 (Seoul_NAT GW - 수동평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "NAT Gateway"
          + section_id           = "5.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ec2-describe-route-tables' AND json.rule = routes[*].gatewayId does not contain \"igw\" and routes[*].networkInterfaceId does not exist and routes[*].natGatewayId exists as X; config where api.name = 'aws-ec2-describe-subnets' as Y; filter '$.X.associations[*].subnetId contains $.Y.subnetId'; show Y;"
          + name       = "VPC - 외부 통신 여부1 (Seoul_NAT GW - 수동평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p104 will be created
  + resource "prismacloud_policy" "p104" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "프라이빗 서브넷에 존재하는 서버가 외부와의 통신이 필요한 경우 3rd Party 또는 NAT Gateway를 사용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 외부 통신 여부2 (Foreign_NAT GW - 수동평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "NAT Gateway"
          + section_id           = "5.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND cloud.region != 'AWS Seoul' AND api.name = 'aws-ec2-describe-route-tables' AND json.rule = routes[*].gatewayId does not contain \"igw\" and routes[*].networkInterfaceId exists and routes[*].natGatewayId does not exist as X; config where api.name = 'aws-ec2-describe-subnets' as Y; filter '$.X.associations[*].subnetId contains $.Y.subnetId'; show Y;"
          + name       = "VPC - 외부 통신 여부2 (Foreign_NAT GW - 수동평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p105 will be created
  + resource "prismacloud_policy" "p105" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Default VPC 점검을 주기적으로 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-07",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 불필요한 VPC 제거1 (Default)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "불필요한 VPC 제거"
          + section_id           = "5.7"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-ec2-describe-vpcs' AND json.rule = isDefault is true"
          + name       = "VPC - 불필요한 VPC 제거1 (Default)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p106 will be created
  + resource "prismacloud_policy" "p106" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "사용하지 않는 VPC 점검을 주기적으로 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-07",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 불필요한 VPC 제거2 (미사용)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "불필요한 VPC 제거"
          + section_id           = "5.7"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ec2-describe-vpcs' as X; config where api.name = 'aws-ec2-describe-subnets' as Y; filter 'not $.X.vpcId equals $.Y.vpcId'; show X;"
          + name       = "VPC - 불필요한 VPC 제거2 (미사용)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p107 will be created
  + resource "prismacloud_policy" "p107" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "의도하지 않은 외부 노출을 예방하기 위해 할당된 서브넷의 Public IP의 자동 할당이 해제되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-08",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - Subnet의 Public IP 자동 할당"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "Subnet의 Public IP 자동 할당"
          + section_id           = "5.8"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'AWS' and api.name = 'aws-ec2-describe-subnets' AND json.rule = 'mapPublicIpOnLaunch is true'"
          + name       = "VPC - Subnet의 Public IP 자동 할당"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p108 will be created
  + resource "prismacloud_policy" "p108" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "불필요한 VPC 엔드포인트에 대해 주기적 점검을 수행하고 삭제하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-09",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - VPC EndPoint 점검 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "VPC 엔드포인트 설정"
          + section_id           = "5.9"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where cloud.type = 'aws' AND operation IN ( 'AcceptVpcEndpointConnections', 'RejectVpcEndpointConnections', 'CreateVpcEndpoint', 'CreateClientVpnEndpoint', 'CreateVpcEndpointConnectionNotification', 'CreateVpcEndpointServiceConfiguration', 'DeleteVpcEndpoints', 'DeleteClientVpnEndpoint', 'DeleteVpcEndpointConnectionNotifications', 'DeleteVpcEndpointServiceConfigurations', 'ModifyVpcEndpoint', 'ModifyClientVpnEndpoint', 'ModifyVpcEndpointConnectionNotification', 'ModifyVpcEndpointServiceConfiguration', 'ModifyVpcEndpointServicePermissions', 'StartVpcEndpointServicePrivateDnsVerification' )"
          + name       = "VPC - VPC EndPoint 점검 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p11 will be created
  + resource "prismacloud_policy" "p11" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "허가되지 않은 데이터 국외반출 및 침해위협 등을 예방하기 위해 지리적 제한 설정을 적용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CF-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudFront - 지리적 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudFront"
          + section_description  = "지리적 제한"
          + section_id           = "15.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-cloudfront-list-distributions' AND json.rule = 'restrictions.geoRestriction.restrictionType contains none'"
          + name       = "CloudFront - 지리적 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p12 will be created
  + resource "prismacloud_policy" "p12" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Amazon S3 URL이 아닌 CloudFront를 통해서만 S3 버킷에 접근이 가능하도록 버킷 정책이 적용되어 있는지 확인"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CF-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudFront - 접근 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudFront"
          + section_description  = "접근 제한"
          + section_id           = "15.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-cloudfront-list-distributions' AND json.rule = 'origins.items[*].s3OriginConfig exists and origins.items[*].s3OriginConfig.originAccessIdentity is empty'"
          + name       = "CloudFront - 접근 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p13 will be created
  + resource "prismacloud_policy" "p13" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "CloudTrail에서 Trails를 생성하여 S3 Bucket에 로그를 저장하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - Trails 생성"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "Trails 생성"
          + section_id           = "11.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name='aws-cloudtrail-describe-trails' AND json.rule = s3BucketName does not exist or s3BucketName is empty"
          + name       = "CloudTrail - Trails 생성"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p14 will be created
  + resource "prismacloud_policy" "p14" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "모든 Region에 대한 CloudTrail 추적 설정이 되어있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 모든 Region에 대한 Trail 생성"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "모든 Region에 대한 Trail 생성"
          + section_id           = "11.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name='aws-cloudtrail-describe-trails' AND json.rule = 'isMultiRegionTrail is false'"
          + name       = "CloudTrail - 모든 Region에 대한 Trail 생성"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p15 will be created
  + resource "prismacloud_policy" "p15" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "S3에 저장된 CloudTrail 로그에 대한 무결성 검증 설정을 하였습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 로그파일 무결성 검증"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "로그파일 무결성 검증"
          + section_id           = "11.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name='aws-cloudtrail-describe-trails' AND json.rule='logFileValidationEnabled is false'"
          + name       = "CloudTrail - 로그파일 무결성 검증"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p16 will be created
  + resource "prismacloud_policy" "p16" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "CloudTrail 로그에 대한 감사를 수행하고 있습니까? (IAM 서비스에서 사용자 추가, 정책 첨부, 생성, 키 삭제 및 로그 그룹 설정과 같은 IAM에서 발생하는 활동을 기록합니다.)"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 로그의 정기적 검토1 (IAM - 수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "로그의 정기적 검토"
          + section_id           = "11.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where operation IN ( 'AddClientIDToOpenIDConnectProvider', 'AddRoleToInstanceProfile', 'AddUserToGroup', 'AttachGroupPolicy', 'AttachRolePolicy', 'AttachUserPolicy', 'ChangePassword', 'CreateAccessKey', 'CreateAccountAlias', 'CreateGroup', 'CreateInstanceProfile', 'CreateLoginProfile', 'CreateOpenIDConnectProvider', 'CreatePolicy', 'CreatePolicyVersion', 'CreateRole', 'CreateSAMLProvider', 'CreateServiceLinkedRole', 'CreateServiceSpecificCredential', 'CreateUser', 'CreateVirtualMFADevice', 'DeactivateMFADevice', 'DeleteAccessKey', 'DeleteAccountAlias', 'DeleteAccountPasswordPolicy', 'DeleteGroup', 'DeleteGroupPolicy', 'DeleteInstanceProfile', 'DeleteLoginProfile', 'DeleteOpenIDConnectProvider', 'DeletePolicy', 'DeletePolicyVersion', 'DeleteRole', 'DeleteRolePermissionsBoundary', 'DeleteRolePolicy', 'DeleteSAMLProvider', 'DeleteServerCertificate', 'DeleteServiceLinkedRole', 'DeleteServiceSpecificCredential', 'DeleteSigningCertificate', 'DeleteSSHPublicKey', 'DeleteUser', 'DeleteUserPermissionsBoundary', 'DeleteUserPolicy', 'DeleteVirtualMFADevice', 'DetachGroupPolicy', 'DetachRolePolicy', 'DetachUserPolicy', 'EnableMFADevice', 'GenerateCredentialReport', 'GenerateOrganizationsAccessReport', 'GenerateServiceLastAccessedDetails', 'GetAccessKeyLastUsed', 'GetAccountAuthorizationDetails', 'GetAccountPasswordPolicy', 'GetAccountSummary', 'GetContextKeysForCustomPolicy', 'GetContextKeysForPrincipalPolicy', 'GetCredentialReport', 'GetGroup', 'GetGroupPolicy', 'GetInstanceProfile', 'GetLoginProfile', 'GetOpenIDConnectProvider', 'GetOrganizationsAccessReport', 'GetPolicy', 'GetPolicyVersion', 'GetRole', 'GetRolePolicy', 'GetSAMLProvider', 'GetServerCertificate', 'GetServiceLastAccessedDetails', 'GetServiceLastAccessedDetailsWithEntities', 'GetServiceLinkedRoleDeletionStatus', 'GetSSHPublicKey', 'GetUser', 'GetUserPolicy', 'ListAccessKeys', 'ListAccountAliases', 'ListAttachedGroupPolicies', 'ListAttachedRolePolicies', 'ListAttachedUserPolicies', 'ListEntitiesForPolicy', 'ListGroupPolicies', 'ListGroups', 'ListGroupsForUser', 'ListInstanceProfiles', 'ListInstanceProfilesForRole', 'ListMFADevices', 'ListOpenIDConnectProviders', 'ListPolicies', 'ListPoliciesGrantingServiceAccess', 'ListPolicyVersions', 'ListRolePolicies', 'ListRoles', 'ListRoleTags', 'ListSAMLProviders', 'ListServerCertificates', 'ListServiceSpecificCredentials', 'ListSigningCertificates', 'ListSSHPublicKeys', 'ListUserPolicies', 'ListUsers', 'ListUserTags', 'ListVirtualMFADevices', 'PutGroupPolicy', 'PutRolePermissionsBoundary', 'PutRolePolicy', 'PutUserPermissionsBoundary', 'PutUserPolicy', 'RemoveClientIDFromOpenIDConnectProvider', 'RemoveRoleFromInstanceProfile', 'RemoveUserFromGroup', 'ResetServiceSpecificCredential', 'ResyncMFADevice', 'SetDefaultPolicyVersion', 'SetSecurityTokenServicePreferences', 'SimulateCustomPolicy', 'SimulatePrincipalPolicy', 'TagRole', 'TagUser', 'UntagRole', 'UntagUser', 'UpdateAccessKey', 'UpdateAccountPasswordPolicy', 'UpdateAssumeRolePolicy', 'UpdateGroup', 'UpdateLoginProfile', 'UpdateOpenIDConnectProviderThumbprint', 'UpdateRole', 'UpdateRoleDescription', 'UpdateSAMLProvider', 'UpdateServerCertificate', 'UpdateServiceSpecificCredential', 'UpdateSigningCertificate', 'UpdateSSHPublicKey', 'UpdateUser', 'UploadServerCertificate', 'UploadSigningCertificate', 'UploadSSHPublicKey' )"
          + name       = "CloudTrail - 로그의 정기적 검토1 (IAM - 수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p17 will be created
  + resource "prismacloud_policy" "p17" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "CloudTrail 로그에 대한 감사를 수행하고 있습니까? (S3 서비스에서 생성, 삭제, 설정과 같은 S3에서 발생하는 활동을 기록합니다.)"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 로그의 정기적 검토2 (S3 - 수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "이상 징후에 대한 모니터링"
          + section_id           = "11.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where cloud.type = 'aws' AND operation IN ( 'CreateBucket', 'CreateMultipartUpload', 'DeleteBucket', 'DeleteBucketAnalyticsConfiguration', 'DeleteBucketCors', 'DeleteBucketEncryption', 'DeleteBucketInventoryConfiguration', 'DeleteBucketLifecycle', 'DeleteBucketMetricsConfiguration', 'DeleteBucketPolicy', 'DeleteBucketReplication', 'DeleteBucketTagging', 'DeleteBucketWebsite', 'DeleteObject', 'DeleteObjects', 'DeleteObjectTagging', 'DeletePublicAccessBlock', 'PutBucketAccelerateConfiguration', 'PutBucketAcl', 'PutBucketAnalyticsConfiguration', 'PutBucketCors', 'PutBucketEncryption', 'PutBucketInventoryConfiguration', 'PutBucketLifecycle', 'PutBucketLifecycleConfiguration', 'PutBucketLogging', 'PutBucketMetricsConfiguration', 'PutBucketNotification', 'PutBucketNotificationConfiguration', 'PutBucketPolicy', 'PutBucketReplication', 'PutBucketRequestPayment', 'PutBucketTagging', 'PutBucketVersioning', 'PutBucketWebsite', 'PutObject', 'PutObjectAcl', 'PutObjectLegalHold', 'PutObjectLockConfiguration', 'PutObjectRetention', 'PutObjectTagging', 'PutPublicAccessBlock', 'RestoreObject' )"
          + name       = "CloudTrail - 로그의 정기적 검토2 (S3 - 수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p18 will be created
  + resource "prismacloud_policy" "p18" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "CloudTrail 로그에 대한 감사를 수행하고 있습니까? (EC2 서비스에서 Security Group에 대한 생성, 삭제, 변경, Tag설정과 같은 Security Group에서 발생하는 활동을 기록합니다.)"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 로그의 정기적 검토3 (SG - 수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "로그의 정기적 검토"
          + section_id           = "11.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where cloud.type = 'aws' AND operation IN ( 'CreateSecurityGroup', 'CreateCacheSecurityGroup', 'CreateClusterSecurityGroup', 'CreateDBSecurityGroup', 'CreateInputSecurityGroup', 'DeleteSecurityGroup', 'DeleteCacheSecurityGroup', 'DeleteClusterSecurityGroup', 'DeleteDBSecurityGroup', 'DeleteInputSecurityGroup', 'AuthorizeSecurityGroupEgress', 'AuthorizeSecurityGroupIngress', 'AuthorizeCacheSecurityGroupIngress', 'AuthorizeClusterSecurityGroupIngress', 'AuthorizeDBSecurityGroupIngress', 'ApplySecurityGroupsToClientVpnTargetNetwork', 'ApplySecurityGroupsToLoadBalancer', 'SetSecurityGroups', 'ModifyMountTargetSecurityGroups', 'RevokeSecurityGroupEgress', 'RevokeSecurityGroupIngress', 'RevokeCacheSecurityGroupIngress', 'RevokeClusterSecurityGroupIngress', 'RevokeDBSecurityGroupIngress', 'UpdateSecurityGroupRuleDescriptionsEgress', 'UpdateSecurityGroupRuleDescriptionsIngress', 'UpdateInputSecurityGroup')"
          + name       = "CloudTrail - 로그의 정기적 검토3 (SG - 수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p19 will be created
  + resource "prismacloud_policy" "p19" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "아모레퍼시픽 공인IP가 아닌 사용자 정책 및 역할 업데이트, 비밀번호 정책 변경 및 액세스 키 관리와 같은 IAM (Identity Access Management) 변경을 감지합니다."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 이상 징후에 대한 모니터링1 (IAM - Amore Public IP)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "이상 징후에 대한 모니터링"
          + section_id           = "11.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where cloud.service = 'iam.amazonaws.com' AND json.rule = $.sourceIPAddress NOT IN ( '220.64.130.161', '220.64.140.102', '220.64.140.103', '220.64.140.114', '220.64.140.180', '220.64.140.225', '220.64.140.235', '220.64.140.239', '220.64.140.84', '220.64.140.85', '220.64.140.86', '220.64.140.98', '58.236.209.222', '58.236.209.223' ) AND $.sourceIPAddress does not contain '1.234.57' AND $.sourceIPAddress does not contain '165.225.110' AND $.sourceIPAddress does not contain '165.225.111'"
          + name       = "CloudTrail - 이상 징후에 대한 모니터링1 (IAM - Amore Public IP)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p2 will be created
  + resource "prismacloud_policy" "p2" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "ACM(AWS Certificate Manager)에 등록된 인증서의 유효기간에 대해 관리하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ACM-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ACM - 인증서 검증 관리"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ACM"
          + section_description  = "인증서 검증 관리"
          + section_id           = "13.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-acm-describe-certificate' AND json.rule = '(_DateTime.ageInDays($.notAfter) > -1) and status equals EXPIRED'"
          + name       = "ACM - 인증서 검증 관리"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p20 will be created
  + resource "prismacloud_policy" "p20" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 서비스 중 Key 및 Delete 이벤트 변경을 감지합니다."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 이상 징후에 대한 모니터링2 (IAM - Key & Delete)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "이상 징후에 대한 모니터링"
          + section_id           = "11.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where cloud.service = 'iam.amazonaws.com' AND operation IN ( 'CreateAccessKey', 'DeleteAccessKey', 'UpdateAccessKey', 'DeleteSSHPublicKey', 'UpdateSSHPublicKey', 'UploadSSHPublicKey', 'DeleteAccountAlias', 'DeleteAccountPasswordPolicy', 'DeleteGroup', 'DeleteGroupPolicy', 'DeleteInstanceProfile', 'DeleteLoginProfile', 'DeleteOpenIDConnectProvider', 'DeletePolicy', 'DeletePolicyVersion', 'DeleteRole', 'DeleteRolePermissionsBoundary', 'DeleteRolePolicy', 'DeleteSAMLProvider', 'DeleteServerCertificate', 'DeleteServiceLinkedRole', 'DeleteServiceSpecificCredential', 'DeleteSigningCertificate', 'DeleteUser', 'DeleteUserPermissionsBoundary', 'DeleteUserPolicy', 'DeleteVirtualMFADevice' )"
          + name       = "CloudTrail - 이상 징후에 대한 모니터링2 (IAM - Key & Delete)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p21 will be created
  + resource "prismacloud_policy" "p21" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "CloudTrail 로그를 모니터링하여 이상 징후에 대해서 대응하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 이상 징후에 대한 모니터링3 (CloudTrail)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "이상 징후에 대한 모니터링"
          + section_id           = "11.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where operation IN ('CreateTrail', 'DeleteTrail', 'StartLogging', 'StopLogging', 'UpdateTrail')"
          + name       = "CloudTrail - 이상 징후에 대한 모니터링3 (CloudTrail)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p22 will be created
  + resource "prismacloud_policy" "p22" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "민감한 VPC 네트워크 구성 업데이트를 탐지합니다."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 이상 징후에 대한 모니터링4 (VPC)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "이상 징후에 대한 모니터링"
          + section_id           = "11.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where operation IN ('AssociateVpcCidrBlock', 'CreateDefaultVpc', 'CreateVpc', 'DeleteVpc', 'DisassociateVpcCidrBlock', 'ModifyVpcAttribute', 'ModifyVpcTenancy')"
          + name       = "CloudTrail - 이상 징후에 대한 모니터링4 (VPC)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p23 will be created
  + resource "prismacloud_policy" "p23" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "아모레퍼시픽 공인IP가 아닌 Security Group 의 생성, 삭제, 업데이트를 감지합니다."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 이상 징후에 대한 모니터링5 (SG)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "이상 징후에 대한 모니터링"
          + section_id           = "11.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where operation IN ('AuthorizeSecurityGroupEgress', 'AuthorizeSecurityGroupIngress', 'RevokeSecurityGroupEgress', 'RevokeSecurityGroupIngress', 'UpdateSecurityGroupRuleDescriptionsEgress', 'UpdateSecurityGroupRuleDescriptionsIngress', 'CreateSecurityGroup', 'DeleteSecurityGroup' ) AND json.rule = $.sourceIPAddress NOT IN ( '220.64.130.161', '220.64.140.102', '220.64.140.103', '220.64.140.114', '220.64.140.180', '220.64.140.225', '220.64.140.235', '220.64.140.239', '220.64.140.84', '220.64.140.85', '220.64.140.86', '220.64.140.98', '58.236.209.222', '58.236.209.223' ) AND $.sourceIPAddress does not contain '1.234.57' AND $.sourceIPAddress does not contain '165.225.110' AND $.sourceIPAddress does not contain '165.225.111'"
          + name       = "CloudTrail - 이상 징후에 대한 모니터링5 (SG)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p24 will be created
  + resource "prismacloud_policy" "p24" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "인가된 사용자만 버킷 웹호스팅의 읽기, 수정 및 삭제와 같은 민감한 작업을 수행 할 수 있는지 확인하십시오."
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 이상 징후에 대한 모니터링6 (Bucket Website)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "이상 징후에 대한 모니터링"
          + section_id           = "11.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where operation IN ( 'GetBucketWebsite', 'PutBucketWebsite', 'DeleteBucketWebsite')"
          + name       = "CloudTrail - 이상 징후에 대한 모니터링6 (Bucket Website)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p25 will be created
  + resource "prismacloud_policy" "p25" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "CloudTrail 로그를 암호화하여 보관하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CT-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudTrail - 로그 암호화 (SSE-KMS)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudTrail"
          + section_description  = "로그 암호화"
          + section_id           = "11.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name='aws-cloudtrail-describe-trails' AND cloud.type = 'aws' AND json.rule = 'kmsKeyId does not exist'"
          + name       = "CloudTrail - 로그 암호화 (SSE-KMS)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p26 will be created
  + resource "prismacloud_policy" "p26" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "'KMS서비스의 CMK(고객관리형키) 삭제 일정 등록 및 비활성화 설정 시 확인을 위한 CloudWatch 알림이 생성되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CW-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudWatch - 키 삭제/비활성화 알림 (CMK)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudWatch"
          + section_description  = "키 삭제/비활성화 알림"
          + section_id           = "12.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-logs-describe-metric-filters' as X; config where api.name = 'aws-cloudwatch-describe-alarms' as Y; config where api.name = 'aws-cloudtrail-describe-trails' as Z; filter '(($.Z.cloudWatchLogsLogGroupArn is not empty and $.Z.cloudWatchLogsLogGroupArn contains $.X.logGroupName and $.Z.isMultiRegionTrail is true and $.Z.includeGlobalServiceEvents is true) and (($.X.filterPattern contains \"eventName=\" or $.X.filterPattern contains \"eventName =\") and ($.X.filterPattern does not contain \"eventName!=\" and $.X.filterPattern does not contain \"eventName !=\") and ($.X.filterPattern contains \"eventSource=\" or $.X.filterPattern contains \"eventSource =\") and ($.X.filterPattern does not contain \"eventSource!=\" and $.X.filterPattern does not contain \"eventSource !=\") and $.X.filterPattern contains kms.amazonaws.com and $.X.filterPattern contains DisableKey and $.X.filterPattern contains ScheduleKeyDeletion) and ($.X.metricTransformations[*] contains $.Y.metricName))'; show X; count(X) less than 1"
          + name       = "CloudWatch - 키 삭제/비활성화 알림 (CMK)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p27 will be created
  + resource "prismacloud_policy" "p27" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "복제 인스턴스에 대한 외부 접근을 차단하여 안전하게 관리하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-DMS-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "DMS - Public Access 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "DMS"
          + section_description  = "퍼블릭 액세스 제한"
          + section_id           = "18.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-dms-replication-instance' AND json.rule = publiclyAccessible is true"
          + name       = "DMS - Public Access 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p28 will be created
  + resource "prismacloud_policy" "p28" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "운영용도의 Account에 복제 인스턴스의 가용성 증가를 위해 다중 AZ로 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-DMS-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "DMS - 복제 인스턴스 이중화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "DMS"
          + section_description  = "이중화"
          + section_id           = "18.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND cloud.account IN ( 'PRD', 'APPRD' ) AND api.name = 'aws-dms-replication-instance' AND json.rule = multiAZ is false"
          + name       = "DMS - 복제 인스턴스 이중화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p29 will be created
  + resource "prismacloud_policy" "p29" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "미사용중인 EC2 인스턴스를 주기적 점검을 통해 삭제를 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - 불필요한 EC2 인스턴스 제거 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "불필요한 EC2 인스턴스 제거"
          + section_id           = "2.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ec2-describe-instances' AND json.rule = state.name contains \"stopped\""
          + name       = "EC2 - 불필요한 EC2 인스턴스 제거 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p3 will be created
  + resource "prismacloud_policy" "p3" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "HTTPS 연결에 쓰이는 SSL 인증서의 신뢰도를 향상시킬 수 있도록 인증서 투명성 로그를 제공하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ACM-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ACM - 인증서 투명성 로깅"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ACM"
          + section_description  = "인증서 투명성 로깅"
          + section_id           = "13.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-acm-describe-certificate' AND json.rule = 'type does not equal IMPORTED and (options.certificateTransparencyLoggingPreference equals DISABLED or options.certificateTransparencyLoggingPreference does not exist)'"
          + name       = "ACM - 인증서 투명성 로깅"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p30 will be created
  + resource "prismacloud_policy" "p30" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "EC2 인스턴스가 퍼블릭 서브넷에 존재할 경우 불필요한 외부 접근을 허용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - 외부 접근 검토 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "불필요한 EC2 인스턴스 제거"
          + section_id           = "2.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ec2-describe-route-tables' AND json.rule = routes[*].gatewayId contains \"igw\" as X; config where api.name = 'aws-ec2-describe-instances' as Y; filter ' $.X.associations[*].subnetId contains $.Y.subnetId'; show Y;"
          + name       = "EC2 - 외부 접근 검토 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p31 will be created
  + resource "prismacloud_policy" "p31" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Amazon Machine Image(AMI)에 대해 Public 접근을 제한하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - AMI Public 접근 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "AMI 접근 제한"
          + section_id           = "2.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name='aws-ec2-describe-images' AND json.rule='image.public is true'"
          + name       = "EC2 - AMI Public 접근 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p32 will be created
  + resource "prismacloud_policy" "p32" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "인가된 사용자만 EBS Snapshot에 대한 접근을 허용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - EBS Snapshot 접근 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "EBS Snapshot 접근 제한"
          + section_id           = "2.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name='aws-ec2-describe-snapshots' AND json.rule='createVolumePermissions[*].group contains all'"
          + name       = "EC2 - EBS Snapshot 접근 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p33 will be created
  + resource "prismacloud_policy" "p33" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Private Zone에 위치한 EC2에 대해 Public IP를 사용하지 않고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - Public IP 사용 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "공인 IP 사용 제한"
          + section_id           = "2.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ec2-describe-instances' AND json.rule = publicIpAddress exists and publicIpAddress is not empty as X; config where api.name = 'aws-ec2-describe-route-tables' AND json.rule = routes[*].gatewayId does not contain \"igw\" as Y; filter '$.Y.associations[*].subnetId contains $.X.subnetId'; show X;"
          + name       = "EC2 - Public IP 사용 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p34 will be created
  + resource "prismacloud_policy" "p34" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "EC2 인스턴스에 IAM 역할을 할당하여 적절한 권한을 부여하고 있습니까? (iam:PassRole 또는 resource, action이 * 인 Role 적용된 EC2 리스트)"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-08",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - IAM 역할 사용"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "IAM 역할 사용"
          + section_id           = "2.8"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-iam-get-policy-version' AND json.rule = \"(document.Statement[?(@.Effect=='Allow' && @.Action=='*')].Resource contains *) or (document.Statement[?(@.Effect=='Allow')].Action contains iam:PassRole)\" as X; config where api.name = 'aws-iam-list-roles' as Y; config where api.name = 'aws-ec2-describe-instances' as Z; filter '(($.Y.inlinePolicies[*].policyName contains $.X.policyName) or ($.Y.attachedPolicies[*].policyName contains $.X.policyName)) and ($.Z.iamInstanceProfile.arn contains $.Y.role.roleName)'; show Z;"
          + name       = "EC2 - IAM 역할 사용"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p35 will be created
  + resource "prismacloud_policy" "p35" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "EC2로부터 분리되어 삭제되지 않은 EBS Volume에 대한 관리가 이루어지고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-09",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - 분리된 EBS Volume 관리"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "분리된 EBS Volume 관리"
          + section_id           = "2.9"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-ec2-describe-volumes' AND json.rule = attachments[*] all empty or attachments[*].state does not contain \"attached\""
          + name       = "EC2 - 분리된 EBS Volume 관리"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p36 will be created
  + resource "prismacloud_policy" "p36" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "EC2에 연결된 EBS Volume에 대하여 암호화를 적용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EC2-10",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EC2 - EBS Volume 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EC2"
          + section_description  = "EBS Volume 암호화"
          + section_id           = "2.10"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where resource.status = Active AND cloud.type = 'aws' AND api.name = 'aws-ec2-describe-volumes' AND json.rule = 'encrypted is false'"
          + name       = "EC2 - EBS Volume 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p37 will be created
  + resource "prismacloud_policy" "p37" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "동일한 태그를 사용하는 후속 이미지의 푸시 작업에 의한 이미지 태그 덮어쓰기를 방지하는 설정이 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ECR-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ECR - 태그 변경 설정"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ECR"
          + section_description  = "태그 변경 설정"
          + section_id           = "19.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ecr-get-repository-policy' AND json.rule = imageTagMutability contains \"MUTABLE\""
          + name       = "ECR - 태그 변경 설정"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p38 will be created
  + resource "prismacloud_policy" "p38" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Repository에 이미지를 푸시할 때 이미지를 스캔하여 알려진 OS 취약점을 평가하도록 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ECR-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ECR - 이미지 스캔"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ECR"
          + section_description  = "이미지 스캔"
          + section_id           = "19.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ecr-get-repository-policy' AND json.rule = imageScanningConfiguration.scanOnPush contains \"false\""
          + name       = "ECR - 이미지 스캔"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p39 will be created
  + resource "prismacloud_policy" "p39" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "중요 또는 민감 정보를 포함하고 있는 Amazon EFS에 저장된 데이터에 대하여 암호화를 적용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EFS-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EFS - 데이터 암호화 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EFS"
          + section_description  = "데이터 암호화"
          + section_id           = "22.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-describe-mount-targets' as X; config where api.name = 'aws-kms-get-key-rotation-status' as Y; filter '$.X.fileSystemDescription.encrypted is true and $.X.fileSystemDescription.kmsKeyId equals $.Y.key.keyArn and $.Y.keyMetadata.keyManager contains AWS'; show X;"
          + name       = "EFS - 데이터 암호화 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p4 will be created
  + resource "prismacloud_policy" "p4" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "더 이상 사용되지 않거나 만료된 인증서를 삭제하는 등 이에 대한 주기적인 점검을 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ACM-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ACM - 미사용 인증서 관리"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ACM"
          + section_description  = "미사용 인증서 관리"
          + section_id           = "13.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-acm-describe-certificate' AND json.rule = '(inUseBy[*] is empty or inUseBy does not exist)'"
          + name       = "ACM - 미사용 인증서 관리"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p40 will be created
  + resource "prismacloud_policy" "p40" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Amazon EFS와 클라이언트 간 전송 중인 데이터에 대한 암호화를 적용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EFS-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EFS - 전송구간 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EFS"
          + section_description  = "액세스 지점 설정"
          + section_id           = "22.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-describe-mount-targets' AND json.rule = 'fileSystemDescription.encrypted is false'"
          + name       = "EFS - 전송구간 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p41 will be created
  + resource "prismacloud_policy" "p41" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "운영용도의 Account에 Redis 엔진을 사용하는 경우 고가용성을 유지하기 위해 다중AZ 설정을 활성화하여 기본 노드 장애 조치 발생 시 AZ간 읽기 전용 복제본에 대한 자동 장애 조치를 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ELC-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ElastiCache - 다중 AZ"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ElastiCache"
          + section_description  = "다중 AZ"
          + section_id           = "20.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND cloud.account IN ( 'APPRD', 'PRD' ) AND api.name = 'aws-elasticache-describe-replication-groups' AND json.rule = 'automaticFailover equals disabled or automaticFailover does not exist'"
          + name       = "ElastiCache - 다중 AZ"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p42 will be created
  + resource "prismacloud_policy" "p42" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Redis 엔진을 사용하는 경우 저장된 데이터를 암호화하여 안전하게 보관하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ELC-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ElastiCache - 데이터 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ElastiCache"
          + section_description  = "데이터 암호화"
          + section_id           = "20.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-elasticache-describe-replication-groups' AND json.rule = 'atRestEncryptionEnabled is false or atRestEncryptionEnabled does not exist'"
          + name       = "ElastiCache - 데이터 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p43 will be created
  + resource "prismacloud_policy" "p43" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Redis 엔진을 사용하는 경우 전송구간 암호화를 통하여 데이터를 안전하게 전달하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ELC-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ElastiCache - 전송구간 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ElastiCache"
          + section_description  = "전송구간 암호화"
          + section_id           = "20.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-elasticache-describe-replication-groups' AND json.rule = 'transitEncryptionEnabled is false or transitEncryptionEnabled does not exist'"
          + name       = "ElastiCache - 전송구간 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p44 will be created
  + resource "prismacloud_policy" "p44" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Redis 인증 토큰을 이용하여 Redis가 클라이언트의 명령 실행을 허용하기 전에 토큰을 요구하여 데이터 보안을 강화하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ELC-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ElastiCache - Redis Auth"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ElastiCache"
          + section_description  = "Redis Auth"
          + section_id           = "20.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-elasticache-describe-replication-groups' AND json.rule = 'authTokenEnabled is false or transitEncryptionEnabled is false or authTokenEnabled does not exist or transitEncryptionEnabled does not exist'"
          + name       = "ElastiCache - Redis Auth"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p45 will be created
  + resource "prismacloud_policy" "p45" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Default VPC의 사용으로 예상치 못한 불필요한 접근을 허용하지 않습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ELC-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "ElastiCache - Default VPC 사용"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ElastiCache"
          + section_description  = "Default VPC 사용"
          + section_id           = "20.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-elasticache-cache-clusters' as X; config where api.name = 'aws-elasticache-describe-replication-groups' as Y; filter '$.Y.memberClusters contains $.X.cacheClusterId and $.X.cacheClusterStatus equals available and ($.X.cacheSubnetGroupName is empty or $.X.cacheSubnetGroupName does not exist)'; show Y;"
          + name       = "ElastiCache - Default VPC 사용"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p46 will be created
  + resource "prismacloud_policy" "p46" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "EMR 클러스터 생성 시 보안 구성(Security configurations)을 사용하여 필요한 경우 인증과 암호화를 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-EMR-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "EMR - 보안구성 사용"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "EMR"
          + section_description  = "보안구성 사용"
          + section_id           = "30.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-emr-describe-cluster' AND json.rule = 'status.state does not contain TERMINATING and securityConfiguration does not exist'"
          + name       = "EMR - 보안구성 사용"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p47 will be created
  + resource "prismacloud_policy" "p47" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Elasticsearch Service 도메인의 VPC Access 설정을 통해 불필요한 퍼블릭 액세스를 제한하고 있습니까? (DATAPRD Account 일 경우 확인)"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ES-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "Elasticsearch - VPC Access 제어"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ES"
          + section_description  = "VPC Access 제어"
          + section_id           = "21.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-es-describe-elasticsearch-domain' AND json.rule = 'endpoints does not exist or endpoints.vpc does not exist or endpoints.vpc is empty'"
          + name       = "Elasticsearch - VPC Access 제어"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p48 will be created
  + resource "prismacloud_policy" "p48" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "저장된 Data에 대한 암호화 설정이 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-ES-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "Elasticsearch - 데이터 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "ES"
          + section_description  = "데이터 암호화"
          + section_id           = "21.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-es-describe-elasticsearch-domain' AND json.rule = 'encryptionAtRestOptions.enabled is false or encryptionAtRestOptions does not exist'"
          + name       = "Elasticsearch - 데이터 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p49 will be created
  + resource "prismacloud_policy" "p49" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "3rd Party 솔루션이나 GuardDuty 등을 통해 위협 모니터링이 수행되고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-GD-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "GuardDuty - 위협 징후 모니터링 (수동 평가 - 미사용)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "GuardDuty"
          + section_description  = "위협 징후 모니터링"
          + section_id           = "9.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-guardduty-detector' AND json.rule = createdAt does not exist or createdAt is empty"
          + name       = "GuardDuty - 위협 징후 모니터링 (수동 평가 - 미사용)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p5 will be created
  + resource "prismacloud_policy" "p5" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Backend에서 HTTP 요청의 출처가 API Gateway인지 인증하기 위해 SSL 인증서를 사용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-APIG-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "API GW - Request 인증"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "API GW"
          + section_description  = "Request 인증"
          + section_id           = "14.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-apigateway-get-stages' AND json.rule = 'clientCertificateId does not exist or clientCertificateId equals None'"
          + name       = "API GW - Request 인증"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p50 will be created
  + resource "prismacloud_policy" "p50" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "관리자 or 특수권한 사용자 이외에 Root 계정 사용을 제한하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Root 계정 사용 유무"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Root 계정 사용 유무"
          + section_id           = "1.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where cloud.type = 'aws' AND ip EXISTS AND user = 'root'"
          + name       = "IAM - Root 계정 사용 유무"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p51 will be created
  + resource "prismacloud_policy" "p51" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Root 계정에서 발급한 Access Key가 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Root 계정 Access Key 관리"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Root 계정 Access Key 관리"
          + section_id           = "1.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name='aws-iam-get-account-summary' AND json.rule='not AccountAccessKeysPresent equals 0'"
          + name       = "IAM - Root 계정 Access Key 관리"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p52 will be created
  + resource "prismacloud_policy" "p52" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Root 계정에서 MFA를 활성화 하였습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Root 계정 MFA 활성화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Root 계정 MFA 활성화"
          + section_id           = "1.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND cloud.service = 'IAM' AND api.name = 'aws-iam-get-credential-report' AND json.rule = 'user equals \"<root_account>\" and mfa_active is false'"
          + name       = "IAM - Root 계정 MFA 활성화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p53 will be created
  + resource "prismacloud_policy" "p53" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Root 계정이 아닌 별도의 사용자 계정을 생성하여 사용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 사용자 계정 생성 유무 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "IAM 계정 생성 유무"
          + section_id           = "1.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-iam-list-users' AND json.rule = arn exists"
          + name       = "IAM - 사용자 계정 생성 유무 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p54 will be created
  + resource "prismacloud_policy" "p54" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정의 Password 복잡도 설정이 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Password 복잡성 설정"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Password 복잡성 설정"
          + section_id           = "1.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-iam-get-account-password-policy' AND json.rule = 'requireNumbers contains false or requireLowercaseCharacters contains false'"
          + name       = "IAM - Password 복잡성 설정"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p55 will be created
  + resource "prismacloud_policy" "p55" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정의 Password가 최소길이로 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Password 최소길이 설정"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Password 최소길이 설정"
          + section_id           = "1.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name='aws-iam-get-account-password-policy' AND json.rule='isDefaultPolicy is true or minimumPasswordLength < 10 or minimumPasswordLength does not exist'"
          + name       = "IAM - Password 최소길이 설정"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p56 will be created
  + resource "prismacloud_policy" "p56" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정의 Password 최대 사용기간이 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-07",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Password 최대 사용기간 설정"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Password 최대 사용기간 설정"
          + section_id           = "1.7"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name='aws-iam-get-account-password-policy' AND json.rule='isDefaultPolicy is true or maxPasswordAge !isType Integer or $.maxPasswordAge > 90 or maxPasswordAge equals 0'"
          + name       = "IAM - Password 최대 사용기간 설정"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p57 will be created
  + resource "prismacloud_policy" "p57" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정의 Password 재사용 금지가 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-08",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Password 재사용 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Password 재사용 제한"
          + section_id           = "1.8"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name='aws-iam-get-account-password-policy' AND json.rule='isDefaultPolicy is true or passwordReusePrevention equals null or passwordReusePrevention !isType Integer or passwordReusePrevention < 2'"
          + name       = "IAM - Password 재사용 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p58 will be created
  + resource "prismacloud_policy" "p58" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "본인 계정의 Password를 직접 변경이 가능 합니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-09",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 본인 Password 변경 허용"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "본인 Password 변경 허용"
          + section_id           = "1.9"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name='aws-iam-get-account-password-policy' AND json.rule='allowUsersToChangePassword is false or allowUsersToChangePassword does not exist'"
          + name       = "IAM - 본인 Password 변경 허용"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p59 will be created
  + resource "prismacloud_policy" "p59" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정에 MFA 인증이 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-10",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 강화된 인증방식 적용1 (MFA 설정)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "강화된 인증방식 적용1"
          + section_id           = "1.10"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name='aws-iam-get-credential-report' AND json.rule='password_enabled equals true and mfa_active is false'"
          + name       = "IAM - 강화된 인증방식 적용1 (MFA 설정)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p6 will be created
  + resource "prismacloud_policy" "p6" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "동일한 환경(DEV to DEV, STG to STG, PRD to PRD)에서의 호출만 허용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-APIG-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "API GW - 접근 통제 (Source IP 제어)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "API GW"
          + section_description  = "접근 통제"
          + section_id           = "14.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-apigateway-get-rest-apis' AND json.rule = policy.Statement[*].Condition.IpAddress.aws:SourceIp exists"
          + name       = "API GW - 접근 통제 (Source IP 제어)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p60 will be created
  + resource "prismacloud_policy" "p60" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정에 MFA 인증을 강제 요구하는 정책이 적용되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-11",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 강화된 인증방식 적용2 (Create_MFA_Enforce)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "강화된 인증방식 적용2"
          + section_id           = "1.11"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name = 'aws-iam-list-users' as X; config where api.name = 'aws-iam-list-attached-user-policies' AND json.rule=attachedPolicies[*].policyName does not contain \"Create_MFA_Enforce\" as Y; config where api.name = 'aws-iam-list-groups' AND json.rule = 'attachedPolicies[*].policyName does not contain \"Create_MFA_Enforce\"'as Z; filter '($.X.groups[*] exists and ($.X.groups[*].groupName == $.Z.groupName)) or ($.X.groups[*] is empty and ($.X.userName == $.Y.user.userName))'; show X;"
          + name       = "IAM - 강화된 인증방식 적용2 (Create_MFA_Enforce)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p61 will be created
  + resource "prismacloud_policy" "p61" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "아모레퍼시픽 IP만 AWS Console에 접근 가능하도록 IAM 계정에 정책을 적용하였습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-12",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Console 접근 통제"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Console 접근 통제"
          + section_id           = "1.12"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name = 'aws-iam-list-users' as X; config where api.name = 'aws-iam-list-attached-user-policies' AND json.rule=attachedPolicies[*].policyName does not contain \"DSPAWSConsoleDeniesPolicy\" as Y; config where api.name = 'aws-iam-list-groups' AND json.rule = 'attachedPolicies[*].policyName does not contain \"DSPAWSConsoleDeniesPolicy\"'as Z; filter '($.X.groups[*] exists and ($.X.groups[*].groupName == $.Z.groupName)) or ($.X.groups[*] is empty and ($.X.userName == $.Y.user.userName))'; show X;"
          + name       = "IAM - Console 접근 통제"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p62 will be created
  + resource "prismacloud_policy" "p62" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM Group을 이용하여 해당 Group에 맞게 서비스별 사용 권한을 부여하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-13",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 그룹 권한 관리1 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "그룹 권한 관리1"
          + section_id           = "1.13"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name = 'aws-iam-list-groups' AND json.rule = attachedPolicies[*] exists or attachedPolicies[*] none empty"
          + name       = "IAM - 그룹 권한 관리1 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p63 will be created
  + resource "prismacloud_policy" "p63" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정 생성시 Group에 할당하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-14",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 그룹 권한 관리2 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "그룹 권한 관리2"
          + section_id           = "1.14"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-iam-list-users' AND json.rule = groups[*].groupName does not exist"
          + name       = "IAM - 그룹 권한 관리2 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p64 will be created
  + resource "prismacloud_policy" "p64" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정의 Role 및 Policy를 주기적으로 감사를 수행하고 있습니까? (서비스 미사용 90일 이상 or 사용한적이 없는 경우)"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-15",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 권한 모니터링 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "권한 모니터링"
          + section_id           = "1.15"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-iam-service-last-accessed-details' AND json.rule = '_DateTime.ageInDays(serviceLastAccesses[*].lastAuthenticated) > 90 or (serviceLastAccesses[*].lastAuthenticated is empty or serviceLastAccesses[*].lastAuthenticated does not exist)'"
          + name       = "IAM - 권한 모니터링 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p65 will be created
  + resource "prismacloud_policy" "p65" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 역할 전환(Switch Role) 사용시 사용자, IP, MFA(Multi-Factor Authentication)를 제한하여 불법적인 시도를 차단하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-16",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 역할 전환 제한 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "역할 전환 제한"
          + section_id           = "1.16"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-iam-list-roles' AND json.rule = (role.assumeRolePolicyDocument.Statement[*].Principal contains \"arn:aws:iam::\" and role.assumeRolePolicyDocument.Statement[*].Action contains \"sts:AssumeRole\") and (role.assumeRolePolicyDocument.Statement[*].Condition.Bool does not contain \"aws:SourceIp\" or role.assumeRolePolicyDocument.Statement[*].Condition.Bool does not contain \"aws:MultiFactorAuthPresent\")"
          + name       = "IAM - 역할 전환 제한 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p66 will be created
  + resource "prismacloud_policy" "p66" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "IAM 계정의 Access Key를 주기적으로 사용여부를 확인하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-17",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - Access Key 관리 (Inactive)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "Access Key 관리"
          + section_id           = "1.17"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-iam-list-access-keys' AND json.rule = status equals \"Inactive\""
          + name       = "IAM - Access Key 관리 (Inactive)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p67 will be created
  + resource "prismacloud_policy" "p67" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "미사용 계정에 대해서 비활성화 및 삭제 처리를 수행하고 있습니까? (90일 이상 미사용)"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-IAM-18",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "IAM - 불필요한 계정 제거"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "IAM"
          + section_description  = "불필요한 계정 제거"
          + section_id           = "1.18"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name = 'aws-iam-get-credential-report' AND json.rule = '_DateTime.ageInDays(user_creation_time) > 90 and (password_last_used equals N/A or password_last_used equals no_information or _DateTime.ageInDays(password_last_used) > 90) and ((access_key_1_last_used_date equals N/A or _DateTime.ageInDays(access_key_1_last_used_date) > 90) and (access_key_2_last_used_date equals N/A or _DateTime.ageInDays(access_key_2_last_used_date) > 90))'"
          + name       = "IAM - 불필요한 계정 제거"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p68 will be created
  + resource "prismacloud_policy" "p68" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "KMS(Key Management Service)의 CMK(Customer Managed Key)가 주기적 변경이 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-KMS-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "KMS - Key 순환설정"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "KMS"
          + section_description  = "키 순환"
          + section_id           = "23.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name='aws-kms-get-key-rotation-status' AND json.rule='key.keyId equals null or rotation_status.keyRotationEnabled is false and rotation_status.keyRotationEnabled != null'"
          + name       = "KMS - Key 순환설정"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p69 will be created
  + resource "prismacloud_policy" "p69" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "KMS(Key Management Service)의 CMK(Customer Managed Key) 사용자의 권환이 최소 권한으로 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-KMS-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "KMS - Key 권한 부여"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "KMS"
          + section_description  = "미사용 키 관리"
          + section_id           = "23.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-kms-get-key-rotation-status' AND json.rule = \"policies.default.Statement[?(@.Effect=='Allow')].Resource contains *\" as X; config where api.name = 'aws-kms-get-key-rotation-status' as Y; filter ' $.Y.keyMetadata.keyManager contains \"CUSTOMER\" '; show X;"
          + name       = "KMS - Key 권한 부여"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p7 will be created
  + resource "prismacloud_policy" "p7" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "동일한 환경(DEVtoDEV, STGtoSTG, PRDtoPRD)에서의 호출만 허용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-APIG-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "API GW - 영역 분리-2 (SourceIP X)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "API GW"
          + section_description  = "영역 분리"
          + section_id           = "14.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-apigateway-get-rest-apis' AND json.rule = policy.Statement[*].Condition.IpAddress.aws:SourceIp does not exist"
          + name       = "API GW - 영역 분리-2 (SourceIP X)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p70 will be created
  + resource "prismacloud_policy" "p70" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "사용하지 않는 KMS서비스의 CMK(Customer Managed Key)에 대해서 비활성화 조치를 하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-KMS-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "KMS - 미사용 Key 관리1 (미사용)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "KMS"
          + section_description  = "키 권한 부여"
          + section_id           = "23.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-kms-get-key-rotation-status' AND json.rule = 'keyMetadata.keyManager contains \"CUSTOMER\" and (keyMetadata.keyState contains Disabled or keyMetadata.keyState contains PendingDeletion)'"
          + name       = "KMS - 미사용 Key 관리1 (미사용)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p71 will be created
  + resource "prismacloud_policy" "p71" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "'사용하지 않는 KMS서비스의 CMK(Customer Managed Key)에 대해서 비활성화 조치를 하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-KMS-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "KMS - 미사용 Key 관리2 (만료예정 30일)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "KMS"
          + section_description  = "키 권한 부여"
          + section_id           = "23.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-kms-get-key-rotation-status' AND json.rule = 'keyMetadata.keyManager contains \"CUSTOMER\" and keyMetadata.enabled is true and (_DateTime.ageInDays($.keyMetadata.validTo) > -30)'"
          + name       = "KMS - 미사용 Key 관리2 (만료예정 30일)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p72 will be created
  + resource "prismacloud_policy" "p72" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "전송되는 Streaming Data에 대해 AWS KMS를 통해 암호화하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-KNS-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "Kinesis - Streaming Data 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "Kinesis"
          + section_description  = "Streaming Data 암호화"
          + section_id           = "31.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-kinesis-list-streams' AND json.rule = 'encryptionType equals NONE or encryptionType does not exist'"
          + name       = "Kinesis - Streaming Data 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p73 will be created
  + resource "prismacloud_policy" "p73" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "중요 또는 민감 정보를 포함하고 있는 함수의 환경 변수를 보호하기 위해 클라이언트 측에서 환경 변수를 암호화하기 위한 설정이 되어있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-Lamb-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "Lambda - 환경변수 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "Lambda"
          + section_description  = "환경변수 암호화"
          + section_id           = "24.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-lambda-list-functions' AND json.rule = environment.variables exists and kmskeyArn does not exist"
          + name       = "Lambda - 환경변수 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p74 will be created
  + resource "prismacloud_policy" "p74" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Lambda 함수를 통해 VPC내 리소스에 접근해야 하는 경우 VPC 연결이 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-Lamb-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "Lambda - VPC 구성"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "Lambda"
          + section_description  = "VPC 구성"
          + section_id           = "24.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-lambda-list-functions' AND json.rule = 'vpcConfig does not exist or vpcConfig.vpcId is empty'"
          + name       = "Lambda - VPC 구성"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p75 will be created
  + resource "prismacloud_policy" "p75" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Lambda에 적절한 실행 역할을 할당하여 사용 목적에 맞게 알맞은 권한을 부여하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-Lamb-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "Lambda - 실행 역할 (수정중)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "Lambda"
          + section_description  = "실행 역할"
          + section_id           = "24.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-lambda-list-functions' as X; config where api.name = 'aws-iam-list-roles' as Y; config where api.name = 'aws-lambda-list-functions' as Z; filter '(($.X.role equals $.Y.role.arn) and ($.Z.role equals $.Y.role.arn) and ($.X.functionArn does not equal $.Z.functionArn))' ; show X;"
          + name       = "Lambda - 실행 역할 (수정중)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p76 will be created
  + resource "prismacloud_policy" "p76" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "중요 또는 민감 정보를 포함하고 있는 Cluster/Instance에 대한 암호화 설정이 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-RDS-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "RDS - Cluster / Instance 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "RDS"
          + section_description  = "Cluster/Instance 암호화"
          + section_id           = "7.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-rds-db-cluster' AND json.rule = 'storageEncrypted is false'"
          + name       = "RDS - Cluster / Instance 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p77 will be created
  + resource "prismacloud_policy" "p77" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "RDS 인스턴스에 퍼블릭 접근이 가능 합니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-RDS-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "RDS - 접근통제"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "RDS"
          + section_description  = "접근통제"
          + section_id           = "7.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' and api.name = 'aws-rds-describe-db-instances' AND json.rule = 'publiclyAccessible is true'"
          + name       = "RDS - 접근통제"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p78 will be created
  + resource "prismacloud_policy" "p78" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "RDS snapshot에 암호화를 적용하여 보관하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-RDS-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "RDS - Snapshot 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "RDS"
          + section_description  = "Snapshot 암호화"
          + section_id           = "7.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-rds-describe-db-snapshots' AND json.rule = 'snapshot.status equals available and snapshot.encrypted is false'"
          + name       = "RDS - Snapshot 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p79 will be created
  + resource "prismacloud_policy" "p79" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "운영용도의 Account에 Multi AZ를 통한 이중화 구성이 적용 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-RDS-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "RDS - 이중화(Multi-AZ)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "RDS"
          + section_description  = "이중화"
          + section_id           = "7.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND cloud.account IN ( 'PRD', 'APPRD' ) AND api.name = 'aws-rds-describe-db-instances' AND json.rule = '(multiAZ is false or multiAZ does not exist)'"
          + name       = "RDS - 이중화(Multi-AZ)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p8 will be created
  + resource "prismacloud_policy" "p8" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "이상행위 등 침해사고 분석을 위해 CloudFront에 대한 액세스 로깅을 설정하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CF-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudFront - Access logging"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudFront"
          + section_description  = "Access Logging"
          + section_id           = "15.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-cloudfront-list-distributions' AND json.rule = 'logging.enabled is false and logging.bucket is empty'"
          + name       = "CloudFront - Access logging"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p80 will be created
  + resource "prismacloud_policy" "p80" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "RDS Cluster에 대해 백업을 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-RDS-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "RDS - 백업 관리"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "RDS"
          + section_description  = "백업 관리"
          + section_id           = "7.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-rds-describe-db-instances' AND json.rule = 'backupRetentionPeriod equals 0 or backupRetentionPeriod does not exist'"
          + name       = "RDS - 백업 관리"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p81 will be created
  + resource "prismacloud_policy" "p81" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "백업 보존 기간 설정이 최소 7일 이상으로 설정 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-RDS-07",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "RDS - 백업 보존 정책"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "RDS"
          + section_description  = "백업 보존 정책"
          + section_id           = "7.7"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-rds-describe-db-instances' AND json.rule = backupRetentionPeriod does not exist or backupRetentionPeriod less than 7"
          + name       = "RDS - 백업 보존 정책"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p82 will be created
  + resource "prismacloud_policy" "p82" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "S3 버킷의 외부 접근을 최소화하고, 인가된 사용자만 접근할 수 있도록 프라이빗 설정이 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - 버킷 인터넷 공개 설정"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "버킷 인터넷 공개 설정"
          + section_id           = "6.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name='aws-s3api-get-bucket-acl' AND json.rule=\"((((acl.grants[?(@.grantee=='AllUsers')] size > 0) or policyStatus.isPublic is true) and publicAccessBlockConfiguration does not exist) or ((acl.grants[?(@.grantee=='AllUsers')] size > 0) and publicAccessBlockConfiguration.ignorePublicAcls is false) or (policyStatus.isPublic is true and publicAccessBlockConfiguration.restrictPublicBuckets is false)) and websiteConfiguration does not exist\""
          + name       = "S3 - 버킷 인터넷 공개 설정"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p83 will be created
  + resource "prismacloud_policy" "p83" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "형상 관리에 대한 감사를 위해 S3 버저닝 기능이 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - 버저닝 기능 활성화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "버저닝 기능 활성화"
          + section_id           = "6.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-s3api-get-bucket-acl' AND json.rule = 'versioningConfiguration.status!=Enabled'"
          + name       = "S3 - 버저닝 기능 활성화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p84 will be created
  + resource "prismacloud_policy" "p84" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "필요한 경우 S3에 저장/변경/삭제 되는 객체에 대한 로깅이 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - 객체 수준 로깅"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "객체 수준 로깅"
          + section_id           = "6.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-cloudtrail-get-event-selectors' AND json.rule = eventSelectors[*].dataResources[*].type contains \"AWS::S3::Object\""
          + name       = "S3 - 객체 수준 로깅"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p85 will be created
  + resource "prismacloud_policy" "p85" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "개인정보가 저장되어 있는 S3 암호화 설정이 활성화 되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - 암호화 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "S3 암호화"
          + section_id           = "6.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where resource.status = Active AND cloud.type = 'aws' AND api.name= 'aws-s3api-get-bucket-acl' AND json.rule = 'policyAvailable is true and denyUnencryptedUploadsPolicies[*] is empty and sseAlgorithm equals None'"
          + name       = "S3 - 암호화 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p86 will be created
  + resource "prismacloud_policy" "p86" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "중요 또는 민감 정보를 포함하고 있는 S3 버킷 내 데이터의 안전한 전송을 위해 버킷 정책에서 SSL 통신이 아닌 접근을 차단하는 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-06",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - 전송구간 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "전송구간 암호화"
          + section_id           = "6.6"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-s3api-get-bucket-acl' AND json.rule = \"(((((acl.grants[?(@.grantee=='AllUsers')] size > 0) or policyStatus.isPublic is true) and publicAccessBlockConfiguration does not exist) or ((acl.grants[?(@.grantee=='AllUsers')] size > 0) and publicAccessBlockConfiguration.ignorePublicAcls is false) or (policyStatus.isPublic is true and publicAccessBlockConfiguration.restrictPublicBuckets is false)) and websiteConfiguration does not exist) and ((policy.Statement[*].Condition.Bool.aws:SecureTransport does not exist) or ((policy.Statement[?(@.Principal=='*' || @.Principal.AWS=='*')].Action contains s3: or policy.Statement[?(@.Principal=='*' || @.Principal.AWS=='*')].Action[*] contains s3:) and (policy.Statement[?(@.Principal=='*' && @.Effect=='Allow')].Condition.Bool.aws:SecureTransport contains false or policy.Statement[?(@.Principal.AWS=='*' && @.Effect=='Allow')].Condition.Bool.aws:SecureTransport contains false or policy.Statement[?(@.Principal=='*' && @.Effect=='Allow')].Condition.Bool.aws:SecureTransport contains FALSE or policy.Statement[?(@.Principal.AWS=='*' && @.Effect=='Allow')].Condition.Bool.aws:SecureTransport contains FALSE or policy.Statement[?(@.Principal=='*' && @.Effect=='Deny')].Condition.Bool.aws:SecureTransport contains true or policy.Statement[?(@.Principal.AWS=='*' && @.Effect=='Deny')].Condition.Bool.aws:SecureTransport contains true or policy.Statement[?(@.Principal=='*' && @.Effect=='Deny')].Condition.Bool.aws:SecureTransport contains TRUE or policy.Statement[?(@.Principal.AWS=='*' && @.Effect=='Deny')].Condition.Bool.aws:SecureTransport contains TRUE)))\""
          + name       = "S3 - 전송구간 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p87 will be created
  + resource "prismacloud_policy" "p87" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "S3 버킷에 대한 서버 액세스 로깅이 설정되어 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-07",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - 서버 액세스 로깅"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "서버 액세스 로깅"
          + section_id           = "6.7"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name='aws-s3api-get-bucket-acl' AND json.rule='loggingConfiguration.targetBucket equals null or loggingConfiguration.targetPrefix equals null'"
          + name       = "S3 - 서버 액세스 로깅"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p88 will be created
  + resource "prismacloud_policy" "p88" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "S3 버킷 버전의 안전한 삭제를 위해 MFA 기능을 설정하여 삭제를 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-08",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - MFA Delete 활성화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "low"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "MFA Delete 활성화"
          + section_id           = "6.8"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-s3api-get-bucket-acl' AND json.rule = 'versioningConfiguration.status equals Enabled and (versioningConfiguration.mfaDeleteEnabled does not exist or versioningConfiguration.mfaDeleteEnabled equals false)'"
          + name       = "S3 - MFA Delete 활성화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p89 will be created
  + resource "prismacloud_policy" "p89" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "외부에 노출되어 있는 정적 웹 사이트 호스팅 기능을 사용하고 있는 버킷에 대한 관리를 수행하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-S3-09",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "S3 - 정적 웹 사이트 호스팅"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "S3"
          + section_description  = "정적 웹 사이트 호스팅"
          + section_id           = "6.9"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-s3api-get-bucket-acl' AND json.rule = 'websiteConfiguration exists'"
          + name       = "S3 - 정적 웹 사이트 호스팅"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p9 will be created
  + resource "prismacloud_policy" "p9" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "안전한 웹 배포를 위해 권장 TLS 버전을 적용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-CF-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "CloudFront - TLS 버전"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "CloudFront"
          + section_description  = "TLS 버전"
          + section_id           = "15.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-cloudfront-list-distributions' AND json.rule = 'viewerCertificate.certificateSource does not contain cloudfront and (viewerCertificate.minimumProtocolVersion equals TLSv1 or viewerCertificate.minimumProtocolVersion equals TLSv1_2016 or viewerCertificate.minimumProtocolVersion equals SSLv3)'"
          + name       = "CloudFront - TLS 버전"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p90 will be created
  + resource "prismacloud_policy" "p90" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "의도하지 않은 Default Security Group의 사용으로 인한 외부 접근을 제한하기 위하여 Default Security Group의 규칙을 모두 제거하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-SG-04",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "Security Group - Default SG 관리"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "high"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "Security Group"
          + section_description  = "Default SG 관리"
          + section_id           = "3.4"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-ec2-describe-security-groups' AND json.rule = '((groupName == default) and ((ipPermissions[*].ipRanges[*] exists or ipPermissions[*].ipv6Ranges[*].cidrIpv6 exists) or (ipPermissionsEgress[*].ipRanges[*] exists or ipPermissionsEgress[*].ipv6Ranges[*].cidrIpv6 exists)))'"
          + name       = "Security Group - Default SG 관리"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p91 will be created
  + resource "prismacloud_policy" "p91" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "노트북 데이터를 안전하게 저장하기 위한 암호화 설정이 되어있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-SM-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "SageMaker - (노트북 인스턴스) 암호화 키 사용"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "SageMaker"
          + section_description  = "(레이블링 작업) 교차 원본 리소스 공유(CORS) 구성"
          + section_id           = "26.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-sagemaker-notebook-instance' AND json.rule = kmsKeyId does not exist"
          + name       = "SageMaker - (노트북 인스턴스) 암호화 키 사용"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p92 will be created
  + resource "prismacloud_policy" "p92" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "노트북 인스턴스에 VPC 연결을 설정하여 네트워크 통신을 통제하고, 직접 인터넷 연결을 제한하여 불필요한 외부 접근을 차단하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-SM-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "SageMaker - (노트북 인스턴스) 외부 통신 제한"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "SageMaker"
          + section_description  = "(노트북 인스턴스) 암호화 키 사용"
          + section_id           = "26.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-sagemaker-notebook-instance' AND json.rule = directInternetAccess equals \"Enabled\""
          + name       = "SageMaker - (노트북 인스턴스) 외부 통신 제한"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p93 will be created
  + resource "prismacloud_policy" "p93" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "Amazon SNS Topic(주제)에 액세스 할 수 있는 사용자를 제한하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-SNS-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "SNS - 액세스 정책"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "SNS"
          + section_description  = "액세스 정책"
          + section_id           = "25.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-sns-get-topic-attributes' AND json.rule = \"(Policy.Statement[?(@.Effect=='Allow')].Resource contains *) or (Policy.Statement[?(@.Effect=='Allow')].Action contains iam:PassRole) or (Policy.Statement[?(@.Effect=='Allow')].Action does not contain SNS and Policy.Statement[?(@.Effect=='Allow')].Action does not contain sns) or ( Policy.Statement[*].Condition does not exist or Policy.Statement[*].Condition any empty or Policy.Statement[*].Principal does not exist or Policy.Statement[*].Principal any empty )\""
          + name       = "SNS - 액세스 정책"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p94 will be created
  + resource "prismacloud_policy" "p94" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "SNS Topic에 AWS KMS를 이용한 암호화 및 Server Side Encryption(SSE)를 사용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-SNS-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "SNS - 데이터 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "SNS"
          + section_description  = "데이터 암호화"
          + section_id           = "25.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-sns-get-topic-attributes' AND json.rule = 'KmsMasterKeyId does not exist'"
          + name       = "SNS - 데이터 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p95 will be created
  + resource "prismacloud_policy" "p95" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "SQS에서 암호화 설정을 통해서 메시지를 안전하게 보호하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-SQS-01",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "SQS - 데이터 암호화"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "SQS"
          + section_description  = "데이터 암호화"
          + section_id           = "35.1"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-sqs-get-queue-attributes' AND json.rule = attributes.KmsMasterKeyId does not exist"
          + name       = "SQS - 데이터 암호화"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p96 will be created
  + resource "prismacloud_policy" "p96" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "NACL(Network ACL)을 사용하여 외부 및 내부 통신에 대한 차단정책을 적용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - Network ACL 점검1 (Inbound Any)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "NACL"
          + section_id           = "5.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-ec2-describe-network-acls' and json.rule = \"(entries[?(@.ruleAction=='allow' && @.protocol=='-1' && @.ipv6CidrBlock=='::/0')].egress contains false) or (entries[?(@.ruleAction=='allow' && @.protocol=='-1' && @.cidrBlock=='0.0.0.0/0')].egress contains false)\""
          + name       = "VPC - Network ACL 점검1 (Inbound Any)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p97 will be created
  + resource "prismacloud_policy" "p97" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "NACL(Network ACL)을 사용하여 외부 및 내부 통신에 대한 차단정책을 적용하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-02",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - Network ACL 점검2 (Outbound Any)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "NACL"
          + section_id           = "5.2"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where cloud.type = 'aws' AND api.name = 'aws-ec2-describe-network-acls' and json.rule = \"(entries[?(@.ruleAction=='allow' && @.protocol=='-1' && @.ipv6CidrBlock=='::/0')].egress contains true) or (entries[?(@.ruleAction=='allow' && @.protocol=='-1' && @.cidrBlock=='0.0.0.0/0')].egress contains true)\""
          + name       = "VPC - Network ACL 점검2 (Outbound Any)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

  # module.main.prismacloud_policy.p98 will be created
  + resource "prismacloud_policy" "p98" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "VPC Peering 연결 생성 및 수정 Event 발생 시 설정을 점검하여 불필요한 외/내부 통신을 제한하고 있습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-03",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - VPC Peering 연결  점검 (수동 평가)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "audit_event"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "VPC Peering 연결의 라우팅 테이블 점검"
          + section_id           = "5.3"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "event where cloud.type = 'aws' AND operation IN ( 'CreateVpcPeeringConnection' , 'ModifyVpcPeeringConnectionOptions' )"
          + name       = "VPC - VPC Peering 연결  점검 (수동 평가)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "AuditEvent"
        }
    }

  # module.main.prismacloud_policy.p99 will be created
  + resource "prismacloud_policy" "p99" {
      + cloud_type            = "aws"
      + created_by            = (known after apply)
      + created_on            = (known after apply)
      + description           = "악성 행위가 없는지 주기적으로 분석/점검/차단을 수행하기 위한 VPC Flow 로그를 설정하였습니까?"
      + enabled               = true
      + id                    = (known after apply)
      + labels                = [
          + "AWS-VPC-05",
        ]
      + last_modified_by      = (known after apply)
      + last_modified_on      = (known after apply)
      + name                  = "VPC - 트래픽 로그 분석1 (Flow Log 설정)"
      + open_alerts_count     = (known after apply)
      + owner                 = (known after apply)
      + policy_id             = (known after apply)
      + policy_mode           = (known after apply)
      + policy_type           = "config"
      + rule_last_modified_on = (known after apply)
      + severity              = "medium"

      + compliance_metadata {
          + compliance_id        = (known after apply)
          + custom_assigned      = true
          + requirement_id       = (known after apply)
          + requirement_name     = "VPC"
          + section_description  = "트래픽 로그 분석"
          + section_id           = "5.5"
          + standard_description = "BespinGlobal Cloud Security (ISMS)"
          + standard_name        = "BespinGlobal Cloud Security"
        }

      + rule {
          + criteria   = "config where api.name = 'aws-ec2-describe-vpcs' as X; config where api.name = 'aws-ec2-describe-flow-logs' as Y; filter 'not ($.X.vpcId == $.Y.resourceId)' ; show X;"
          + name       = "VPC - 트래픽 로그 분석1 (Flow Log 설정)"
          + parameters = {
              + "savedSearch" = "false"
              + "withIac"     = "false"
            }
          + rule_type  = "Config"
        }
    }

Plan: 287 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

